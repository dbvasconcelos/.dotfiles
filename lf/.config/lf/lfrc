# File browser settings.

# File Preview
set previewer ctpv
set cleaner ctpvclear
&ctpv -s $id
&ctpvquit $id

# Shell integration
set shell zsh
set shellopts '-euy'
set ifs "\n"

set drawbox
set hidden
set scrolloff 10
set icons
set period 1
set autoquit on

## Commands

# Directory change listener
cmd on-cd &{{
    # Show current directory in window title
    printf "\033]0; ${PWD/#$HOME/\~}\007" > /dev/tty
}}

# Redraw listener
cmd on-redraw %{{
    # Dynamically set number of columns
    if [ $lf_width -le 80 ]; then
        lf -remote "send $id set ratios 1:2"
    elif [ $lf_width -le 160 ]; then
        lf -remote "send $id set ratios 1:2:3"
    else
        lf -remote "send $id set ratios 1:2:3:5"
    fi
}}

# Create Directory
cmd mkdir %{{
    IFS=" "
    mkdir -p -- "$*"
    lf -remote "send $id select \"$*\""
}}

# Delete Files/Directories
cmd delete ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    printf "%s\n\t" "$fx"
    printf "delete?[y/N]"
    read ans
    [ $ans = "y" ] && rm -rf -- $fx && notify-send -u low "File(s) deleted." "$fx"
}}

# Create links
cmd link %{{
    set -- $(cat ~/.local/share/lf/files)
    mode="$1"
    shift
    if [ "$#" -lt 1 ]; then
        lf -remote "send $id echo no files to link"
        exit 0
    fi
    case "$mode" in
        # symbolically copy mode is indicating a soft link
        copy) ln -sr -t . -- "$@";;
        # while a move mode is indicating a hard link
        move) ln -t . -- "$@";;
    esac
    rm ~/.local/share/lf/files
    lf -remote "send clear"
}}

# Extract command
cmd extract ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    printf "%s\n\t" "$fx"
    printf "extract?[y/N]"
    read ans
    [ $ans = "y" ] && aunpack -- $fx
}}

# Compress command
cmd compress ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    printf "%s\n\t" "$fx"
    printf "compress to: "
    read dest
    packdir="$(basename $dest | cut -d. -f1)"
    mkdir $packdir
    advcp -ga $fx $packdir
    apack $dest $packdir
    rm -rf $packdir
    lf -remote "send $id unselect"
    lf -remote "send $id select \"$dest\""
}}

# Set background
cmd setbg "$1"

# Fzf jump
cmd fzy-jump $lf -remote "send $id select '$(fzf)'"

# Bookmark dir jump
cmd bm-jump $lf -remote "send $id cd $(chooseplace 'Jump to bookmark location')"

## Startup actions
on-cd
recol

## Bindings
map <c-f> fzy-jump
map <c-n> push :mkdir<space>
map <enter> shell
map A :rename; cmd-end
map C :rename; cmd-end; cmd-delete-home
map D delete
map E extract
map I :rename; cmd-home
map J bm-jump
map P :link
map V push :!nvim<space>
map X !$f
map b $setbg $f
map c :rename; cmd-delete-home
map i rename
map p :paste; clear
map r push A<c-u> # new rename
map x $$f

# Warning on nested execution
&[ $LF_LEVEL -eq 1 ] || lf -remote "send $id echoerr \"Warning: You're in a nested lf instance!\""
